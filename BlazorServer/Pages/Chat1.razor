@page "/Chat"
@using MongoDB.Driver
@using MongoDB.Bson
@using MongoDB.Bson.Serialization.Attributes
@using BlazorServer.Data

 
@inject IHttpContextAccessor httpContextAccessor
@inject NavigationManager NM
@using Microsoft.AspNetCore.Http
 

  <h1>Chatte mit den anderen Yugioh Fans @verändern;</h1>



<div class="Nachrichtenbox">
  <div class="NachrichtenScrollBox">
    
  </div>
  <div class="Chats">
    @foreach (var col in CollectionNames)                              //Die collections bzw chats in den der User was verloren hat, werden geladen.
    {
      if (col.ColName.EndsWith(UserName))                                        //Ich bin Käufer
      {
        var recs2 = dbChat.LoadRecords<Chatten>(col.ColName);

        Trimmed = col.ColName.Split(' ')[0].Trim();

        <div class="SingleChat" @onclick="@(e => SingleChatClick(col.ColName, UserName + " " + Trimmed))" @oncontextmenu="((e) => ContextMenu.ShowAsync(e))" @oncontextmenu:preventDefault>
          <p>@Trimmed</p>

          @foreach (var rec2 in recs2)
          {
            if (rec2 == recs2[recs2.Count - 1] && !rec2.Gesehen && rec2.TargetUserName == UserName)
            {
              <div style="background-color: blue; border-radius: 50%; height: 20px; width: 20px; float: right; margin-bottom:5px; margin-right:5px; "></div>
            }
            if (i == recs2.Count)
            {
              if (rec2.Content.Length > 15)
              {
                <p><b>@rec2.Content.Substring(0, 15)...</b></p>
              }
              else
              {
                <p><b>@rec2.Content</b></p>
              }
              i = 1;
            }
            else
            {
              i++;
            }

          }

          @*@for (i = 1; i <= recs2.Count; i++)
          {
            if(i == recs2.Count)
              {
                <p><b>@recs2[i].Content</b></p>
              i = 1;
            }
          }*@
        </div>
        <DxContextMenu @ref="@ContextMenu" ItemClick="@(e => DeleteChat(col.ColName))">
          <Items>
            <DxContextMenuItem Text="Delete"></DxContextMenuItem>
          </Items>
        </DxContextMenu>
      }
    }
  </div>
  <input class="Chatinput" rows="5" @bind="NewContent" />
  <button class="buttn">Send</button>
</div>

@code {
  DxContextMenu ContextMenu { get; set; }

  bool b = true;
  public int i = 1;
  public int j = 1;
  public string verändern = "kk";
  public string UserName;
  public string UserComb;
  public string Trimmed;
  private string NewContent = "";

  private List<CardinfoItem> Cardinfos = new();
  private List<Chatten> Chats = new();
  private List<SingleChat> CollectionNames = new();

  MongoCRUD db = new MongoCRUD("Yugioh1");
  MongoCRUD dbChat = new MongoCRUD("Chats");

  protected override void OnInitialized()
  {
    UserName = httpContextAccessor.HttpContext.User.Identity.Name;      //UserName wird Initialisiert

    var client = new MongoClient("mongodb://localhost/");   //Mongoclient wird initialisiert
    var server = client.GetServer();                        //server wird initialisiert
    var database = server.GetDatabase("Chats");
    foreach (var col in database.GetCollectionNames())     //Collections werden durchsucht
    {
      if (col.Contains(UserName))                          //Wenn Collection den Username beinhaltet, kommt der Chat in die Liste CollectionNames
      {
        var recs2 = dbChat.LoadRecords<Chatten>(col);
        CollectionNames.Add(new SingleChat          //CollectionName und Sendtime wird in die Liste geschrieben, damit die nach der Zeit geordnet werden kann.
        {
          ColName = col,
          SendTime = recs2[recs2.Count - 1].SendTime
        });
      }
    }

    CollectionNames.Sort((x, y) => DateTime.Compare(y.SendTime, x.SendTime));     //Liste wird umgekehrt sortiert, damit Der Letzte SingleChat oben steht.
  }
  private void SingleChatClick(string col, string col2)         //Click Event um zum Chat zu Gelangen. Die jeweilige Collection ist in der col Variable
  {
    NM.NavigateTo($"Chat2/{col}");

    var recs2 = dbChat.LoadRecords<Chatten>(col);
    foreach (var rec2 in recs2)
    {
      Gesehen(col, col2, rec2.Id);
    }
  }

  public void Gesehen(string col, string col2, Guid id)   //Datenbank Gesehen == True
  {
    dbChat.UpdateRecordChat<Chatten>(col, col2, id);
  }

  private void DeleteChat(string col)   //Chat wird Gelöscht
  {
    dbChat.DeleteCollection<Chatten>(col);
    NM.NavigateTo(NM.Uri, forceLoad: true);
  }
}
