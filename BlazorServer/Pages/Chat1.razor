@page "/Chat"
@using MongoDB.Driver
@using MongoDB.Bson
@using MongoDB.Bson.Serialization.Attributes
@using BlazorServer.Data

 
@inject IHttpContextAccessor httpContextAccessor
@inject NavigationManager NM
@using Microsoft.AspNetCore.Http
 

  <h1>Chatte mit den anderen Yugioh Fans @verändern;</h1>



<div class="Nachrichtenbox">
  <div class="NachrichtenScrollBox">
    
  </div>
  <div class="Chats">
    @foreach(string col in CollectionNames)
    {
      if (col.EndsWith(UserName))                                        //Ich bin Käufer
      {
        Trimmed = col.Split(' ')[0].Trim();
        var recs2 = dbChat.LoadRecords<Chatten>(col);
    <div class="SingleChat" @onclick="@(e => SingleChatClick(col, UserName + " " + Trimmed))" @oncontextmenu="((e) => ContextMenu.ShowAsync(e))" @oncontextmenu:preventDefault>
      @foreach (var rec2 in recs2)
      {
        if (!rec2.Gesehen && rec2.TargetUserName == UserName)
        {
          <div style="background-color: blue; border-radius: 50%; height: 20px; width: 20px; float: right; margin-top:5px; margin-right:5px;"></div>
          break;
        }
      }

      <p>@Trimmed</p>

    </div>
        <DxContextMenu @ref="@ContextMenu" ItemClick="@(e => DeleteChat(col))">
          <Items>
            <DxContextMenuItem Text="Delete"></DxContextMenuItem>
          </Items>
        </DxContextMenu>
      }
    }
  </div>
  <input class="Chatinput" rows="5" @bind="NewContent" />
  <button class="buttn">Send</button>
</div>

@code {
  DxContextMenu ContextMenu { get; set; }

  public string verändern = "kk";
  public string UserName;
  public string UserComb;
  public string Trimmed;
  private string NewContent = "";

  private List<CardinfoItem> Cardinfos = new();
  private List<Chatten> Chats = new();
  private List<string> CollectionNames = new();

  MongoCRUD db = new MongoCRUD("Yugioh1");
  MongoCRUD dbChat = new MongoCRUD("Chats");

  protected override void OnInitialized()
  {
    UserName = httpContextAccessor.HttpContext.User.Identity.Name;      //UserName wird Initialisiert

    var recs = db.LoadRecords<CardinfoItem>("CardsToSell");
    foreach (var rec in recs)
    {
      Cardinfos.Add(new CardinfoItem
      {
        Id = rec.Id,
        Verkäufer = rec.Verkäufer,
        Available = rec.Available,
        CardName = rec.CardName,
        Price = rec.Price,
        Editionnumber = rec.Editionnumber,
        Rarity = rec.Rarity,
        Zustand = rec.Zustand,
      });
    }

    var client = new MongoClient("mongodb://localhost/");   //Mongoclient wird initialisiert

    var server = client.GetServer();                        //server wird initialisiert
    var database = server.GetDatabase("Chats");
    foreach (var coll in database.GetCollectionNames())     //Collections werden durchsucht
    {
      if (coll.Contains(UserName))                          //Wenn Collection den Username beinhaltet, kommt der Chat in die Liste CollectionNames
      {
        CollectionNames.Add(coll);
      }
    }
  }

  private void SingleChatClick(string col, string col2)         //Click Event um zum Chat zu Gelangen. Die jeweilige Collection ist in der col Variable
  {
    NM.NavigateTo($"Chat2/{col}");

    var recs2 = dbChat.LoadRecords<Chatten>(col);
    foreach (var rec2 in recs2)
    {
      Chats.Add(new Chatten
      {
        SourceUserName = rec2.SourceUserName,
        TargetUserName = rec2.TargetUserName,
        Content = rec2.Content,
        SendTime = rec2.SendTime,
        Gesehen = rec2.Gesehen
      });
      Gesehen(col, col2, rec2.Id);
    }
  }

  public void Gesehen(string col, string col2, Guid id)   //Datenbank Gesehen == True
  {
    dbChat.UpdateRecord<Chatten>(col, col2, id);
  }

  private void DeleteChat(string col)   //Chat wird Gelöscht
  {
    dbChat.DeleteCollection<Chatten>(col);
    NM.NavigateTo(NM.Uri, forceLoad: true);
  }
}
