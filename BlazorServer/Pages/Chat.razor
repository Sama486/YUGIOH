@page "/Chat"
@using MongoDB.Driver
@using MongoDB.Driver.GridFS
@using MongoDB.Driver.Linq
@using MongoDB.Bson
@using MongoDB.Bson.Serialization.Attributes
@using BlazorServer.Data
@using BlazorServer.Pages
@inject IHttpContextAccessor httpContextAccessor
@inject NavigationManager NM
@using Microsoft.AspNetCore.Http

<h1>Chatte mit den Verkäufern @CollectionNames.First();</h1>

<div class="Nachrichtenbox">
  <div class="NachrichtenScrollBox">
    @*@foreach (var rec2 in dbChat.LoadRecords<Chat>(UserComb))
      {
        if (rec2.SourceUserName == UserName)
        {
          <div style="width:100%">
            <div class="Nachrichten" style="float:right;clear:right">
              @rec2.Content
            </div>
          </div>
        }
        else
        {
          <div>
            <div class="Nachrichten">
              @rec2.Content
            </div>
          </div>
        }
      }*@
  </div>
  <div class="Chats">
    @foreach (var coll in CollectionNames)
    {
      UserWords = coll.Split(new string[] { " ", "Sells To", UserName }, StringSplitOptions.None);
      foreach (var Cardinfo in Cardinfos)
        if(UserWords[0].Contains(Cardinfo.Verkäufer))
      {
          <div class="SingleChat" @onclick="@(e => SingleChatClick(Cardinfo.Verkäufer))">
            @UserWords[0]
          </div>
      }
      
    }
  </div>
  <textarea class="Chatinput" rows="5" />
  <button class="buttn">Send</button>
</div>


@code {

  public int i = 0;
  public string UserName;
  public string UserComb;

  public string[] UserWords;
  private List<CardinfoItem> Cardinfos = new();
  private List<string> CollectionNames = new();

  MongoCRUD db = new MongoCRUD("Yugioh1");
  MongoCRUD dbChat = new MongoCRUD("Chats");

  protected override void OnInitialized()
  {
    UserName = httpContextAccessor.HttpContext.User.Identity.Name;      //UserName wird Initialisiert

    var recs = db.LoadRecords<CardinfoItem>("CardsToSell");
    foreach (var rec in recs)
    {
      Cardinfos.Add(new CardinfoItem
      {
        Id = rec.Id,
        Verkäufer = rec.Verkäufer,
        Available = rec.Available,
        CardName = rec.CardName,
        Price = rec.Price,
        Editionnumber = rec.Editionnumber,
        Rarity = rec.Rarity,
        Zustand = rec.Zustand,
      });
    }

    var client = new MongoClient("mongodb://localhost/");   //Host und Port

    var server = client.GetServer();
    var database = server.GetDatabase("Chats");
    foreach (var coll in database.GetCollectionNames())
    {
      if (coll.Contains(UserName))
      {
        i++;
        CollectionNames.Add(coll);

      }
    }
  }
  private void SingleChatClick(string _Verkäufer)
  {
    string[] Acteures = { _Verkäufer, UserName };
    UserComb = Acteures[0].ToString() + " sells to " + Acteures[1].ToString();
    NM.NavigateTo($"Chat2/{_Verkäufer}/{UserComb}");
  }

}
