@page "/Chat2/{col}"
@using BlazorServer.Data
@using MongoDB.Driver
@using MongoDB.Bson
@using MongoDB.Bson.Serialization.Attributes
@using BlazorServer
@using Microsoft.AspNetCore.Http

@inject IHttpContextAccessor httpContextAccessor
@inject NavigationManager NM



<h1>Chatte mit @col.Split(' ')[0].Trim()</h1>
<div class="Nachrichtenbox">
  <div class="NachrichtenScrollBox">
    @foreach (var rec2 in dbChat.LoadRecords<Chatten>(col))       //Der angeklickte Chat wird geladen
    {
      if (rec2.SourceUserName == UserName)
      {
        <div style="width:100%">
          <div class="Nachrichten" style="float:right;clear:right ; margin-left:55%">
            @rec2.Content
          </div>
        </div>
      }
      if (rec2.TargetUserName == UserName)
      {
        <div style="width:100% ">
          <div class="Nachrichten" style="float:left;clear:left ; margin-right:55%">
            @rec2.Content
          </div>
        </div>
      }
    }
  </div>
  <div class="Chats">
    @foreach (string col in CollectionNames)                              //Die collections bzw chats in den der User was verloren hat, werden geladen.
    {
      if (col.EndsWith(UserName))                                        //Ich bin Käufer
      {
        Trimmed = col.Split(' ')[0].Trim();

        <div class="SingleChat" @onclick="@(e => SingleChatClick(col))" @oncontextmenu="((e) => ContextMenu.ShowAsync(e))" @oncontextmenu:preventDefault>
          <p>@Trimmed</p>

        </div>
        <DxContextMenu @ref="@ContextMenu" ItemClick="@(e => DeleteChat(col))">
          <Items>
            <DxContextMenuItem Text="Delete"></DxContextMenuItem>
          </Items>
        </DxContextMenu>
      }
    }
  </div>
  <input class="Chatinput" rows="5" @bind="NewContent" @onkeyup="@SendWithEnter" />
  <button class="buttn" @onclick="Send">Send</button>
</div>

@code {
  DxContextMenu ContextMenu { get; set; }


  public string UserName;
  public string Trimmed;
  public string col2;
  private string NewContent = "";

  [Parameter]
  public string col { get; set; }


  private List<CardinfoItem> Cardinfos = new();
  private List<Chatten> Chats = new();
  private List<string> CollectionNames = new();


  MongoCRUD db = new MongoCRUD("Yugioh1");
  MongoCRUD dbChat = new MongoCRUD("Chats");


  protected override void OnInitialized()
  {
    UserName = httpContextAccessor.HttpContext.User.Identity.Name;      //UserName wird Initialisiert

    col2 = col.Split(' ')[1].Trim() + " " + col.Split(' ')[0].Trim();

    var recs = db.LoadRecords<CardinfoItem>("CardsToSell");
    foreach (var rec in recs)
    {
      Cardinfos.Add(new CardinfoItem
      {
        Id = rec.Id,
        Verkäufer = rec.Verkäufer,
        Available = rec.Available,
        CardName = rec.CardName,
        Price = rec.Price,
        Editionnumber = rec.Editionnumber,
        Rarity = rec.Rarity,
        Zustand = rec.Zustand,
      });
    }

    var recs2 = dbChat.LoadRecords<Chatten>(col);
    foreach (var rec2 in recs2)
    {
      Chats.Add(new Chatten
      {
        SourceUserName = rec2.SourceUserName,
        TargetUserName = rec2.TargetUserName,
        Content = rec2.Content,
        SendTime = rec2.SendTime
      });
    }

    var client = new MongoClient("mongodb://localhost/");   //Host und Port

    var server = client.GetServer();
    var database = server.GetDatabase("Chats");
    foreach (var coll in database.GetCollectionNames())     //Collections werden durchsucht
    {
      if (coll.Contains(UserName))                          //Wenn Collection den Username beinhaltet, kommt der Chat in die Liste CollectionNames
      {
        CollectionNames.Add(coll);
      }
    }
  }

  private void Send()
  {
    if (!string.IsNullOrWhiteSpace(NewContent))
    {
      DateTime timeUtc = DateTime.UtcNow;

      dbChat.InsertRecord2(col, col2, new Chatten { SourceUserName = UserName, TargetUserName = col.Split(' ')[0].Trim(), Content = NewContent, SendTime = timeUtc });
      NewContent = string.Empty;
    }
  }


  protected void SendWithEnter(KeyboardEventArgs e)
  {
    if (e.Code == "Enter" || e.Code == "NumpadEnter")
    {
      Send();
    }
  }

  private void SingleChatClick(string col)         //Click Event um zum Chat zu Gelangen
  {
    NM.NavigateTo($"Chat2/{col}");
  }

  private void DeleteChat(string col)
  {
    dbChat.DeleteCollection<Chatten>(col);
  }
}
